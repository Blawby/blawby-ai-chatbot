{
  "summary": {
    "totalFiles": 303,
    "totalReferences": 1172,
    "filesWithReferences": 88,
    "alreadyUpdatedFiles": 6,
    "skippedFiles": 8
  },
  "byFile": {
    "worker/agents/legal-intake/errors.ts": {
      "path": "worker/agents/legal-intake/errors.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"I'm having trouble creating your matter. Please try again or contact our support team for assistance.\"",
          "line": 110,
          "context": "return \"I'm having trouble creating your matter. Please try again or contact our support team for assistance.\";"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 271
    },
    "worker/agents/legal-intake/index.ts": {
      "path": "worker/agents/legal-intake/index.ts",
      "totalReferences": 68,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 697,
          "context": "function isPublicMode(teamId?: string | null): boolean {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 722,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// TEAM",
          "line": 708,
          "context": "// TEAM CONFIG CACHE"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`\\nIMPORTANT: This team requires location information (city and state) before proceeding with contact forms or matter creation. Always ask for location first if not provided.`",
          "line": 925,
          "context": "`\\nIMPORTANT: This team requires location information (city and state) before proceeding with contact forms or matter creation. Always ask for location first if not provided.` : '';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../../services/TeamService.js'",
          "line": 2,
          "context": "import { TeamService, type Team, buildDefaultTeamConfig } from '../../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 2513
    },
    "worker/agents/legal-intake/legalIntakeLogger.ts": {
      "path": "worker/agents/legal-intake/legalIntakeLogger.ts",
      "totalReferences": 19,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 54,
          "context": "teamId?: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 637
    },
    "worker/agents/legal-intake/promptTemplates.ts": {
      "path": "worker/agents/legal-intake/promptTemplates.ts",
      "totalReferences": 18,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 257,
          "context": "teamId?: string"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 8,
          "context": "export interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 8,
          "context": "export interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "* Based on the Team interface but only includes properties used in this module"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "* Based on the Team interface but only includes properties used in this module"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "* Based on the Team interface but only includes properties used in this module"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Choose the appropriate template based on team",
          "line": 388,
          "context": "// Choose the appropriate template based on team configuration"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\*.*team.*\\*\\//i",
          "match": "/** Team slug identifier */",
          "line": 9,
          "context": "/** Team slug identifier */"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\*\\*.*team.*\\*\\//i",
          "match": "/** Team slug identifier */",
          "line": 9,
          "context": "/** Team slug identifier */"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'string' || teamId.trim() === ''",
          "line": 377,
          "context": "if (teamId !== undefined && (typeof teamId !== 'string' || teamId.trim() === '')) {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 401
    },
    "worker/consumers/doc-processor.ts": {
      "path": "worker/consumers/doc-processor.ts",
      "totalReferences": 42,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const { sessionId, teamId, file, statusId } = msg.body as AutoAnalysisEvent;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 553
    },
    "worker/index.ts": {
      "path": "worker/index.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'/api/teams'",
          "line": 78,
          "context": "} else if (path.startsWith('/api/teams')) {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 144
    },
    "worker/middleware/businessScopeValidator.ts": {
      "path": "worker/middleware/businessScopeValidator.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// If team",
          "line": 47,
          "context": "// If team offers General Consultation, allow most requests"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 187
    },
    "worker/middleware/caseDraftMiddleware.ts": {
      "path": "worker/middleware/caseDraftMiddleware.ts",
      "totalReferences": 2,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../agents/legal-intake/promptTemplates.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../agents/legal-intake/promptTemplates.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 182
    },
    "worker/middleware/contentPolicyFilter.ts": {
      "path": "worker/middleware/contentPolicyFilter.ts",
      "totalReferences": 8,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 85,
          "context": "teamId: context.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 85,
          "context": "teamId: context.teamId,"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Note: team",
          "line": 69,
          "context": "// Note: teamConfig parameter is currently unused but kept for interface compatibility"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 259
    },
    "worker/middleware/conversationContextManager.ts": {
      "path": "worker/middleware/conversationContextManager.ts",
      "totalReferences": 8,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 62,
          "context": "teamId: string;"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${this.KV_PREFIX}${sessionId}:${teamId}`",
          "line": 140,
          "context": "const key = `${this.KV_PREFIX}${sessionId}:${teamId}`;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 598
    },
    "worker/middleware/documentChecklistMiddleware.ts": {
      "path": "worker/middleware/documentChecklistMiddleware.ts",
      "totalReferences": 5,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 284
    },
    "worker/middleware/fileAnalysisMiddleware.ts": {
      "path": "worker/middleware/fileAnalysisMiddleware.ts",
      "totalReferences": 33,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 72,
          "context": "teamId: context.teamId"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Handle URLs like \"/api/files/team",
          "line": 298,
          "context": "// Handle URLs like \"/api/files/team-session-timestamp-random\""
        },
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"/api/files/team-session-timestamp-random\"",
          "line": 298,
          "context": "// Handle URLs like \"/api/files/team-session-timestamp-random\""
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 385
    },
    "worker/middleware/jurisdictionValidator.ts": {
      "path": "worker/middleware/jurisdictionValidator.ts",
      "totalReferences": 5,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 90
    },
    "worker/middleware/pdfGenerationMiddleware.ts": {
      "path": "worker/middleware/pdfGenerationMiddleware.ts",
      "totalReferences": 5,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 156
    },
    "worker/middleware/pipeline.ts": {
      "path": "worker/middleware/pipeline.ts",
      "totalReferences": 6,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 109
    },
    "worker/middleware/skipToLawyerMiddleware.ts": {
      "path": "worker/middleware/skipToLawyerMiddleware.ts",
      "totalReferences": 16,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { TeamConfig } from '../services/TeamService",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Determine if this is public mode or team mode based on team",
          "line": 112,
          "context": "// Determine if this is public mode or team mode based on teamId"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 2,
          "context": "import type { TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 306
    },
    "worker/routes/activity.ts": {
      "path": "worker/routes/activity.ts",
      "totalReferences": 35,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 93,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Security check: ensure session belongs to the requested team",
          "line": 95,
          "context": "// Security check: ensure session belongs to the requested team"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`idempotency:${teamId}:${key}`",
          "line": 315,
          "context": "const idempotencyKey = `idempotency:${teamId}:${key}`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId'",
          "line": 74,
          "context": "const teamId = url.searchParams.get('teamId');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 407
    },
    "worker/routes/agent.ts": {
      "path": "worker/routes/agent.ts",
      "totalReferences": 10,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 353,
          "context": "INSERT OR IGNORE INTO client_team_access (id, user_id, team_id, first_contact_at, last_activity_at)"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 353,
          "context": "INSERT OR IGNORE INTO client_team_access (id, user_id, team_id, first_contact_at, last_activity_at)"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 629,
          "context": "effectiveTeamId,"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 356,
          "context": "`${authContext.user.id}-${resolvedTeamId}`,"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 356,
          "context": "`${authContext.user.id}-${resolvedTeamId}`,"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 356,
          "context": "`${authContext.user.id}-${resolvedTeamId}`,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 353,
          "context": "INSERT OR IGNORE INTO client_team_access (id, user_id, team_id, first_contact_at, last_activity_at)"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 353,
          "context": "INSERT OR IGNORE INTO client_team_access (id, user_id, team_id, first_contact_at, last_activity_at)"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Track client-team",
          "line": 351,
          "context": "// Track client-team access for authenticated users"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${authContext.user.id}-${resolvedTeamId}`",
          "line": 356,
          "context": "`${authContext.user.id}-${resolvedTeamId}`,"
        }
      ],
      "hasOrganizationRefs": true,
      "lineCount": 738
    },
    "worker/routes/files.ts": {
      "path": "worker/routes/files.ts",
      "totalReferences": 60,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId: statusUpdate.teamId,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 232,
          "context": "id, team_id, session_id, original_name, file_name, file_path,"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 353,
          "context": "const resolvedTeamId = sessionResolution.session.teamId;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 84,
          "context": "teamId: z.string().min(1, 'Team ID is required'),"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 84,
          "context": "teamId: z.string().min(1, 'Team ID is required'),"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 84,
          "context": "teamId: z.string().min(1, 'Team ID is required'),"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 84,
          "context": "teamId: z.string().min(1, 'Team ID is required'),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 232,
          "context": "id, team_id, session_id, original_name, file_name, file_path,"
        },
        {
          "category": "database",
          "pattern": "/FROM teams/g",
          "match": "FROM teams",
          "line": 211,
          "context": "const teamCheckStmt = env.DB.prepare('SELECT id FROM teams WHERE id = ? OR slug = ?');"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// First check if the team",
          "line": 210,
          "context": "// First check if the team exists, if not, create a minimal entry"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${teamId}-${sessionId}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`",
          "line": 157,
          "context": "const fileId = `${teamId}-${sessionId}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Team ID is required'",
          "line": 84,
          "context": "teamId: z.string().min(1, 'Team ID is required'),"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 682
    },
    "worker/routes/index.ts": {
      "path": "worker/routes/index.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./teams'",
          "line": 5,
          "context": "export { handleTeams } from './teams';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 16
    },
    "worker/routes/payment.ts": {
      "path": "worker/routes/payment.ts",
      "totalReferences": 20,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "if (!body.teamId) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 109,
          "context": "conditions.push('team_id = ?');"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// GET /api/payment/history - Get payment history for a user or team",
          "line": 91,
          "context": "// GET /api/payment/history - Get payment history for a user or team"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Missing team ID'",
          "line": 27,
          "context": "throw HttpErrors.badRequest('Missing team ID');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 370
    },
    "worker/routes/pdf.ts": {
      "path": "worker/routes/pdf.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string;"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Get session and team",
          "line": 61,
          "context": "// Get session and team context if provided"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Missing session ID or team ID'",
          "line": 127,
          "context": "throw HttpErrors.badRequest('Missing session ID or team ID');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 190
    },
    "worker/routes/review.ts": {
      "path": "worker/routes/review.ts",
      "totalReferences": 7,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 22,
          "context": "throw HttpErrors.badRequest('Team ID is required');"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId'",
          "line": 19,
          "context": "const teamId = url.searchParams.get('teamId');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 73
    },
    "worker/routes/sessions.ts": {
      "path": "worker/routes/sessions.ts",
      "totalReferences": 23,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "async function normalizeTeamId(env: Env, teamId?: string | null): Promise<string> {"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 87,
          "context": "teamId: resolution.session.teamId,"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 87,
          "context": "teamId: resolution.session.teamId,"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 87,
          "context": "teamId: resolution.session.teamId,"
        },
        {
          "category": "database",
          "pattern": "/FROM teams/g",
          "match": "FROM teams",
          "line": 18,
          "context": "'SELECT id FROM teams WHERE id = ?'"
        },
        {
          "category": "database",
          "pattern": "/FROM teams/g",
          "match": "FROM teams",
          "line": 18,
          "context": "'SELECT id FROM teams WHERE id = ?'"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Try to find team",
          "line": 16,
          "context": "// Try to find team by ID (ULID) first, then by slug"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId is required'",
          "line": 9,
          "context": "throw HttpErrors.badRequest('teamId is required');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 161
    },
    "worker/routes/teams.ts": {
      "path": "worker/routes/teams.ts",
      "totalReferences": 78,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 68,
          "context": "const teamId = pathParts[0];"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 71,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 71,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 71,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 71,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 71,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\blistTeams\\s*\\(/g",
          "match": "listTeams(",
          "line": 146,
          "context": "return await listTeams(teamService);"
        },
        {
          "category": "functions",
          "pattern": "/\\blistTeams\\s*\\(/g",
          "match": "listTeams(",
          "line": 146,
          "context": "return await listTeams(teamService);"
        },
        {
          "category": "functions",
          "pattern": "/\\blistTeams\\s*\\(/g",
          "match": "listTeams(",
          "line": 146,
          "context": "return await listTeams(teamService);"
        },
        {
          "category": "functions",
          "pattern": "/\\bcreateTeam\\s*\\(/g",
          "match": "createTeam(",
          "line": 156,
          "context": "return await createTeam(teamService, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bcreateTeam\\s*\\(/g",
          "match": "createTeam(",
          "line": 156,
          "context": "return await createTeam(teamService, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bcreateTeam\\s*\\(/g",
          "match": "createTeam(",
          "line": 156,
          "context": "return await createTeam(teamService, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bupdateTeam\\s*\\(/g",
          "match": "updateTeam(",
          "line": 165,
          "context": "return await updateTeam(teamService, teamId, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bupdateTeam\\s*\\(/g",
          "match": "updateTeam(",
          "line": 165,
          "context": "return await updateTeam(teamService, teamId, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bupdateTeam\\s*\\(/g",
          "match": "updateTeam(",
          "line": 165,
          "context": "return await updateTeam(teamService, teamId, request);"
        },
        {
          "category": "functions",
          "pattern": "/\\bdeleteTeam\\s*\\(/g",
          "match": "deleteTeam(",
          "line": 176,
          "context": "return await deleteTeam(teamService, teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bdeleteTeam\\s*\\(/g",
          "match": "deleteTeam(",
          "line": 176,
          "context": "return await deleteTeam(teamService, teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bdeleteTeam\\s*\\(/g",
          "match": "deleteTeam(",
          "line": 176,
          "context": "return await deleteTeam(teamService, teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bvalidateTeamAccess\\s*\\(/g",
          "match": "validateTeamAccess(",
          "line": 562,
          "context": "const isValid = await teamService.validateTeamAccess(teamId, body.token);"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import { TeamService, TeamConfig } from '../services/TeamService",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Validate that the team",
          "line": 70,
          "context": "// Validate that the team exists"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../services/TeamService.js'",
          "line": 1,
          "context": "import { TeamService, TeamConfig } from '../services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 645
    },
    "worker/schema.sql": {
      "path": "worker/schema.sql",
      "totalReferences": 42,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "-- Teams table"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 20,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "//app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team",
          "line": 210,
          "context": "('01K0TNGNKNJEP8EPKHXAQV4S0R', 'north-carolina-legal-services', 'North Carolina Legal Services', '{\"aiModel\": \"@cf/openai/gpt-oss-20b\", \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\": null}}'),"
        },
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"aiModel\": \"@cf/openai/gpt-oss-20b\", \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\"",
          "line": 210,
          "context": "('01K0TNGNKNJEP8EPKHXAQV4S0R', 'north-carolina-legal-services', 'North Carolina Legal Services', '{\"aiModel\": \"@cf/openai/gpt-oss-20b\", \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\": null}}'),"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'private', -- 'public', 'private', 'team', 'client'",
          "line": 148,
          "context": "access_level TEXT DEFAULT 'private', -- 'public', 'private', 'team', 'client'"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 418
    },
    "worker/schemas/jurisdictionConfig.ts": {
      "path": "worker/schemas/jurisdictionConfig.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`I notice you're located in ${userLocation}. ${teamName} primarily serves clients in ${config.description}.`",
          "line": 203,
          "context": "const baseMessage = `I notice you're located in ${userLocation}. ${teamName} primarily serves clients in ${config.description}.`;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 235
    },
    "worker/schemas/payment.ts": {
      "path": "worker/schemas/payment.ts",
      "totalReferences": 3,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 61,
          "context": "team_id?: string;"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 61,
          "context": "team_id?: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 97
    },
    "worker/schemas/validation.ts": {
      "path": "worker/schemas/validation.ts",
      "totalReferences": 11,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: idSchema.optional(),"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 49,
          "context": "// Team schemas"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Team",
          "line": 49,
          "context": "// Team schemas"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 162
    },
    "worker/services/AIService.ts": {
      "path": "worker/services/AIService.ts",
      "totalReferences": 26,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 55,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\blistTeams\\s*\\(/g",
          "match": "listTeams(",
          "line": 64,
          "context": "const allTeams = await teamService.listTeams();"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeamConfig\\s*\\(/g",
          "match": "getTeamConfig(",
          "line": 43,
          "context": "async getTeamConfig(teamId: string): Promise<TeamConfig> {"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import { TeamConfig, buildDefaultTeamConfig } from './TeamService",
          "line": 2,
          "context": "import { TeamConfig, buildDefaultTeamConfig } from './TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import('./TeamService",
          "line": 53,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Import TeamConfig helpers from Team",
          "line": 1,
          "context": "// Import TeamConfig helpers from TeamService instead of defining it here"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamService.js'",
          "line": 2,
          "context": "import { TeamConfig, buildDefaultTeamConfig } from './TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 85
    },
    "worker/services/ActivityService.ts": {
      "path": "worker/services/ActivityService.ts",
      "totalReferences": 28,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 39,
          "context": "async getMatterEvents(matterId: string, teamId: string): Promise<ActivityEvent[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 111,
          "context": "throw new Error('Team ID is required for activity queries');"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 52,
          "context": "SELECT id FROM matters WHERE team_id = ?"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Team ID is required for activity queries'",
          "line": 111,
          "context": "throw new Error('Team ID is required for activity queries');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 385
    },
    "worker/services/AsyncAdobeAnalysis.ts": {
      "path": "worker/services/AsyncAdobeAnalysis.ts",
      "totalReferences": 12,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: string,"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 160
    },
    "worker/services/ContactIntakeOrchestrator.ts": {
      "path": "worker/services/ContactIntakeOrchestrator.ts",
      "totalReferences": 20,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId?: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 6,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 6,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { Team } from './TeamService",
          "line": 6,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`case-submissions/${safeTeam}/${safeSession}/${filename}`",
          "line": 80,
          "context": "return `case-submissions/${safeTeam}/${safeSession}/${filename}`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamService.js'",
          "line": 6,
          "context": "import type { Team } from './TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 256
    },
    "worker/services/MockPaymentService.ts": {
      "path": "worker/services/MockPaymentService.ts",
      "totalReferences": 6,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "console.log('💰 [MOCK] Creating invoice for payment request: teamId=', paymentRequest.teamId, 'sessionId=', paymentRequest.sessionId);"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "console.log('💰 [MOCK] Creating invoice for payment request: teamId=', paymentRequest.teamId, 'sessionId=', paymentRequest.sessionId);"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "console.log('💰 [MOCK] Creating invoice for payment request: teamId=', paymentRequest.teamId, 'sessionId=', paymentRequest.sessionId);"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 29,
          "context": "id, payment_id, team_id, customer_email, customer_name, customer_phone,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 29,
          "context": "id, payment_id, team_id, customer_email, customer_name, customer_phone,"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'💰 [MOCK] Creating invoice for payment request: teamId=', paymentRequest.teamId, 'sessionId='",
          "line": 13,
          "context": "console.log('💰 [MOCK] Creating invoice for payment request: teamId=', paymentRequest.teamId, 'sessionId=', paymentRequest.sessionId);"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 98
    },
    "worker/services/NotificationService.ts": {
      "path": "worker/services/NotificationService.ts",
      "totalReferences": 7,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { Team } from './TeamService",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamService.js'",
          "line": 3,
          "context": "import type { Team } from './TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 148
    },
    "worker/services/PDFGenerationService.ts": {
      "path": "worker/services/PDFGenerationService.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`Generated by ${content.teamName || 'Legal Services'}`",
          "line": 579,
          "context": "addText(`Generated by ${content.teamName || 'Legal Services'}`, font, 10, rgb(0.4, 0.4, 0.4));"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 652
    },
    "worker/services/PaymentService.ts": {
      "path": "worker/services/PaymentService.ts",
      "totalReferences": 37,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "private async getPaymentConfig(teamId: string): Promise<PaymentConfig> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 28,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "functions",
          "pattern": "/\\bgetTeam\\s*\\(/g",
          "match": "getTeam(",
          "line": 28,
          "context": "const team = await teamService.getTeam(teamId);"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 386,
          "context": "team_id: customerData.team_id"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import('./TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import('./TeamService",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Use team",
          "line": 30,
          "context": "// Use team's consultation fee if available, otherwise use defaults"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${this.mcpServerUrl}/api/v1/teams/${teamUlid}/customer`",
          "line": 144,
          "context": "const response = await fetch(`${this.mcpServerUrl}/api/v1/teams/${teamUlid}/customer`, {"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamService.js'",
          "line": 26,
          "context": "const { TeamService } = await import('./TeamService.js');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 805
    },
    "worker/services/PaymentServiceFactory.ts": {
      "path": "worker/services/PaymentServiceFactory.ts",
      "totalReferences": 8,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import type { Team } from './TeamService",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamService.js'",
          "line": 4,
          "context": "import type { Team } from './TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 87
    },
    "worker/services/ReviewService.ts": {
      "path": "worker/services/ReviewService.ts",
      "totalReferences": 10,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "async getReviewMatters(teamId: string): Promise<ReviewMatter[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "async getReviewMatters(teamId: string): Promise<ReviewMatter[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "async getReviewMatters(teamId: string): Promise<ReviewMatter[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 26,
          "context": "async getReviewMatters(teamId: string): Promise<ReviewMatter[]> {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 44,
          "context": "WHERE m.team_id = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 44,
          "context": "WHERE m.team_id = ?"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import { TeamConfig } from './AIService';"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 44,
          "context": "WHERE m.team_id = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 44,
          "context": "WHERE m.team_id = ?"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Get review statistics for a team",
          "line": 121,
          "context": "// Get review statistics for a team"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 166
    },
    "worker/services/SessionMigrationService.ts": {
      "path": "worker/services/SessionMigrationService.ts",
      "totalReferences": 4,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 27,
          "context": "JOIN conversations c ON c.team_id = m.team_id"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 27,
          "context": "JOIN conversations c ON c.team_id = m.team_id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 27,
          "context": "JOIN conversations c ON c.team_id = m.team_id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 27,
          "context": "JOIN conversations c ON c.team_id = m.team_id"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 59
    },
    "worker/services/SessionService.ts": {
      "path": "worker/services/SessionService.ts",
      "totalReferences": 67,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 19,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 221,
          "context": "if (session.teamId !== teamId) {"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 221,
          "context": "if (session.teamId !== teamId) {"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 221,
          "context": "if (session.teamId !== teamId) {"
        },
        {
          "category": "complex",
          "pattern": "/\\bsession\\.teamId\\b/g",
          "match": "session.teamId",
          "line": 221,
          "context": "if (session.teamId !== teamId) {"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 83,
          "context": "teamId: String(row.team_id),"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`Session ${sessionId} belongs to team ${session.teamId}, cannot be accessed by team ${teamId}`",
          "line": 222,
          "context": "throw new Error(`Session ${sessionId} belongs to team ${session.teamId}, cannot be accessed by team ${teamId}`);"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Cannot persist message: session not found or team mismatch'",
          "line": 365,
          "context": "throw new Error('Cannot persist message: session not found or team mismatch');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 578
    },
    "worker/services/StatusService.ts": {
      "path": "worker/services/StatusService.ts",
      "totalReferences": 13,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'sessionId, teamId, and fileName are required'",
          "line": 288,
          "context": "throw new Error('sessionId, teamId, and fileName are required');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 342
    },
    "worker/types/events.ts": {
      "path": "worker/types/events.ts",
      "totalReferences": 2,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 5,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 5,
          "context": "teamId: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 23
    },
    "worker/utils/fileAnalysisUtils.ts": {
      "path": "worker/utils/fileAnalysisUtils.ts",
      "totalReferences": 2,
      "references": [
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Format: team",
          "line": 119,
          "context": "// Format: team-slug-uuid-timestamp-random"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`uploads/${teamSlug}/${sessionId}/${fileId}`",
          "line": 148,
          "context": "const prefix = `uploads/${teamSlug}/${sessionId}/${fileId}`;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 224
    },
    "worker/utils/logger.ts": {
      "path": "worker/utils/logger.ts",
      "totalReferences": 2,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 66,
          "context": "static logTeamConfig(team: Record<string, unknown>, includeConfig: boolean = false): void {"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'logTeamConfig called with null/undefined team'",
          "line": 68,
          "context": "this.warn('logTeamConfig called with null/undefined team');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 138
    },
    "worker/utils/messageTemplates.ts": {
      "path": "worker/utils/messageTemplates.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`I'll submit this to our legal team for review. A lawyer will contact you within 24 hours to discuss your case.`",
          "line": 104,
          "context": "return `I'll submit this to our legal team for review. A lawyer will contact you within 24 hours to discuss your case.`;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 168
    },
    "worker/utils.ts": {
      "path": "worker/utils.ts",
      "totalReferences": 11,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 32,
          "context": "WHERE team_id = ? AND strftime('%Y', created_at) = ?"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 32,
          "context": "WHERE team_id = ? AND strftime('%Y', created_at) = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 32,
          "context": "WHERE team_id = ? AND strftime('%Y', created_at) = ?"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 32,
          "context": "WHERE team_id = ? AND strftime('%Y', created_at) = ?"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 117
    },
    "src/components/ActivityTimeline.tsx": {
      "path": "src/components/ActivityTimeline.tsx",
      "totalReferences": 3,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 21,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 21,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 21,
          "context": "teamId?: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 181
    },
    "src/components/AppLayout.tsx": {
      "path": "src/components/AppLayout.tsx",
      "totalReferences": 11,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId: string;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamNotFound'",
          "line": 5,
          "context": "import { TeamNotFound } from './TeamNotFound';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 363
    },
    "src/components/ChatContainer.tsx": {
      "path": "src/components/ChatContainer.tsx",
      "totalReferences": 5,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 18,
          "context": "teamId: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 177
    },
    "src/components/FeedbackUI.tsx": {
      "path": "src/components/FeedbackUI.tsx",
      "totalReferences": 3,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 10,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 10,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 10,
          "context": "teamId?: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 197
    },
    "src/components/LeftSidebar.tsx": {
      "path": "src/components/LeftSidebar.tsx",
      "totalReferences": 1,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "teamId: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 198
    },
    "src/components/MatterProgress.tsx": {
      "path": "src/components/MatterProgress.tsx",
      "totalReferences": 6,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 23,
          "context": "teamId: string;"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`/api/paralegal/${teamId}/${matterId}/status`",
          "line": 47,
          "context": "const response = await fetch(`/api/paralegal/${teamId}/${matterId}/status`, {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 269
    },
    "src/components/Message.tsx": {
      "path": "src/components/Message.tsx",
      "totalReferences": 3,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 90,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 90,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 90,
          "context": "teamId: string;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 469
    },
    "src/components/SEOHead.tsx": {
      "path": "src/components/SEOHead.tsx",
      "totalReferences": 5,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import { TeamConfig } from '../../worker/types';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 2,
          "context": "import { TeamConfig } from '../../worker/types';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "//ai.blawby.com/team",
          "line": 53,
          "context": "(teamConfig?.profileImage || 'https://ai.blawby.com/team-profile-demo.png'));"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${teamConfig.name} - AI Legal Assistant`",
          "line": 23,
          "context": "(teamConfig?.name ? `${teamConfig.name} - AI Legal Assistant` : 'Blawby AI - Intelligent Legal Assistant & Chat Interface');"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'https://ai.blawby.com/team-profile-demo.png'",
          "line": 53,
          "context": "(teamConfig?.profileImage || 'https://ai.blawby.com/team-profile-demo.png'));"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 80
    },
    "src/components/TeamNotFound.tsx": {
      "path": "src/components/TeamNotFound.tsx",
      "totalReferences": 5,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 5,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 5,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 5,
          "context": "teamId: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "interface TeamNotFoundProps {"
        },
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"<strong className=\"font-semibold\">{teamId}</strong>\"",
          "line": 17,
          "context": "We couldn't find the team \"<strong className=\"font-semibold\">{teamId}</strong>\"."
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 52
    },
    "src/components/TeamProfile.tsx": {
      "path": "src/components/TeamProfile.tsx",
      "totalReferences": 10,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 6,
          "context": "teamId: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "interface TeamProfileProps {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "interface TeamProfileProps {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "interface TeamProfileProps {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 3,
          "context": "interface TeamProfileProps {"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\*.*team.*\\*\\//i",
          "match": "/* Team Logo */",
          "line": 24,
          "context": "{/* Team Logo */}"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`@${teamId}`",
          "line": 49,
          "context": "<span className=\"text-sm sm:text-base lg:text-lg font-medium text-[#d4af37] truncate block\" title={`@${teamId}`}>@{teamId}</span>"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 60
    },
    "src/components/UserProfile.tsx": {
      "path": "src/components/UserProfile.tsx",
      "totalReferences": 1,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId?: string | null;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 329
    },
    "src/components/VirtualMessageList.tsx": {
      "path": "src/components/VirtualMessageList.tsx",
      "totalReferences": 10,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 16,
          "context": "teamId: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import TeamProfile from './TeamProfile';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\*.*team.*\\*\\//i",
          "match": "/* Team Profile Header - Fixed at top of scrollable area */",
          "line": 136,
          "context": "{/* Team Profile Header - Fixed at top of scrollable area */}"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./TeamProfile'",
          "line": 4,
          "context": "import TeamProfile from './TeamProfile';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 184
    },
    "src/components/settings/hooks/useSettingsNavigation.ts": {
      "path": "src/components/settings/hooks/useSettingsNavigation.ts",
      "totalReferences": 1,
      "references": [
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'/settings/team'",
          "line": 47,
          "context": "navigateToSettings('/settings/team');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 92
    },
    "src/components/settings/hooks/useUserProfile.ts": {
      "path": "src/components/settings/hooks/useUserProfile.ts",
      "totalReferences": 4,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string | null;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string | null;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string | null;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 13,
          "context": "teamId?: string | null;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 288
    },
    "src/config/api.ts": {
      "path": "src/config/api.ts",
      "totalReferences": 2,
      "references": [
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${config.baseUrl}${config.teamsEndpoint}`",
          "line": 43,
          "context": "return `${config.baseUrl}${config.teamsEndpoint}`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'/api/teams'",
          "line": 9,
          "context": "teamsEndpoint: '/api/teams',"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 54
    },
    "src/hooks/useActivity.ts": {
      "path": "src/hooks/useActivity.ts",
      "totalReferences": 12,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 20,
          "context": "teamId?: string;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 88,
          "context": "setError('Team ID is required');"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId'",
          "line": 73,
          "context": "if (teamId) params.set('teamId', teamId);"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 242
    },
    "src/hooks/useChatSession.ts": {
      "path": "src/hooks/useChatSession.ts",
      "totalReferences": 10,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 22,
          "context": "export function useChatSession(teamId: string): ChatSessionState {"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${STORAGE_PREFIX}${teamId}`",
          "line": 36,
          "context": "return teamId ? `${STORAGE_PREFIX}${teamId}` : null;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 168
    },
    "src/hooks/useFileUpload.ts": {
      "path": "src/hooks/useFileUpload.ts",
      "totalReferences": 18,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 31,
          "context": "teamId?: string;"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\bresolvedTeamId\\b/g",
          "match": "resolvedTeamId",
          "line": 73,
          "context": "const resolvedTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`Cannot upload files yet. Waiting for session to initialize. teamId: \"${resolvedTeamId}\", sessionId: \"${resolvedSessionId}\"`",
          "line": 83,
          "context": "const error = `Cannot upload files yet. Waiting for session to initialize. teamId: \"${resolvedTeamId}\", sessionId: \"${resolvedSessionId}\"`;"
        },
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"${resolvedTeamId}\", sessionId: \"${resolvedSessionId}\"",
          "line": 83,
          "context": "const error = `Cannot upload files yet. Waiting for session to initialize. teamId: \"${resolvedTeamId}\", sessionId: \"${resolvedSessionId}\"`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId'",
          "line": 41,
          "context": "formData.append('teamId', teamId);"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 360
    },
    "src/hooks/useMessageHandling.ts": {
      "path": "src/hooks/useMessageHandling.ts",
      "totalReferences": 12,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 55,
          "context": "teamId?: string;"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 119,
          "context": "const effectiveTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 119,
          "context": "const effectiveTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 119,
          "context": "const effectiveTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 119,
          "context": "const effectiveTeamId = (teamId ?? '').trim();"
        },
        {
          "category": "complex",
          "pattern": "/\\beffectiveTeamId\\b/g",
          "match": "effectiveTeamId",
          "line": 119,
          "context": "const effectiveTeamId = (teamId ?? '').trim();"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 589
    },
    "src/hooks/useTeamConfig.ts": {
      "path": "src/hooks/useTeamConfig.ts",
      "totalReferences": 23,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 70,
          "context": "const [teamId, setTeamId] = useState<string>('');"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 19,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 19,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 19,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 19,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "const getTeamsEndpoint = () => '/api/teams';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "const getTeamsEndpoint = () => '/api/teams';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Use ref to track if we've already fetched for this team",
          "line": 95,
          "context": "// Use ref to track if we've already fetched for this teamId"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'/api/teams'",
          "line": 5,
          "context": "const getTeamsEndpoint = () => '/api/teams';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 238
    },
    "src/index.tsx": {
      "path": "src/index.tsx",
      "totalReferences": 14,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 47,
          "context": "const { teamId, teamConfig, teamNotFound, handleRetryTeamConfig } = useTeamConfig({"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 13,
          "context": "import { useTeamConfig } from './hooks/useTeamConfig';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 13,
          "context": "import { useTeamConfig } from './hooks/useTeamConfig';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Handle team",
          "line": 49,
          "context": "// Handle team config error"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'./hooks/useTeamConfig'",
          "line": 13,
          "context": "import { useTeamConfig } from './hooks/useTeamConfig';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 616
    },
    "src/services/upload/UploadTransport.ts": {
      "path": "src/services/upload/UploadTransport.ts",
      "totalReferences": 7,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "teamId: string;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 24,
          "context": "teamId: string;"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${teamId}/${sessionId}/${response.data.fileId}`",
          "line": 110,
          "context": "storageKey: response.data.storageKey || `${teamId}/${sessionId}/${response.data.fileId}`"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId'",
          "line": 176,
          "context": "formData.append('teamId', teamId);"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 241
    },
    "src/utils/conversationalForm.ts": {
      "path": "src/utils/conversationalForm.ts",
      "totalReferences": 3,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 138,
          "context": "export function formatFormData(formData: FormData, teamId: string, conversationId?: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 138,
          "context": "export function formatFormData(formData: FormData, teamId: string, conversationId?: string) {"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`Perfect! I have your phone: ${extractedInfo.phone}. I have all your contact information now. Let me update your matter summary with your contact details and submit everything to our legal team.`",
          "line": 84,
          "context": "response = `Perfect! I have your phone: ${extractedInfo.phone}. I have all your contact information now. Let me update your matter summary with your contact details and submit everything to our legal team.`;"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 146
    },
    "src/utils/forms.ts": {
      "path": "src/utils/forms.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 7,
          "context": "export function formatFormData(formData: Record<string, unknown>, teamId: string) {"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Fetch team",
          "line": 41,
          "context": "// Fetch team configuration to check payment requirements"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`Thank you for choosing ${teamConfig.name}!`",
          "line": 74,
          "context": "`Thank you for choosing ${teamConfig.name}!`;"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'/api/teams'",
          "line": 3,
          "context": "const getTeamsEndpoint = () => '/api/teams';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 107
    },
    "src/utils/mockPricingData.ts": {
      "path": "src/utils/mockPricingData.ts",
      "totalReferences": 4,
      "references": [
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 114,
          "context": "name: 'Team Collaboration',"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 114,
          "context": "name: 'Team Collaboration',"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 114,
          "context": "name: 'Team Collaboration',"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Team Collaboration'",
          "line": 114,
          "context": "name: 'Team Collaboration',"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 412
    },
    "tests/integration/api/agent-route.test.ts": {
      "path": "tests/integration/api/agent-route.test.ts",
      "totalReferences": 12,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Should handle non-existent team",
          "line": 408,
          "context": "// Should handle non-existent team gracefully by using default config"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'test-team-1'",
          "line": 98,
          "context": "teamId: 'test-team-1',"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 517
    },
    "tests/integration/api/blawby-api.test.ts": {
      "path": "tests/integration/api/blawby-api.test.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 188,
          "context": "team_id: testContext.teamUlid,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 188,
          "context": "team_id: testContext.teamUlid,"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 44,
          "context": "console.log(`   Team ULID: ${testContext.teamUlid}`);"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 44,
          "context": "console.log(`   Team ULID: ${testContext.teamUlid}`);"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 188,
          "context": "team_id: testContext.teamUlid,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 188,
          "context": "team_id: testContext.teamUlid,"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Fetch non-sensitive team",
          "line": 51,
          "context": "// Fetch non-sensitive team metadata from API (credentials are redacted server-side)"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`   Team ULID: ${testContext.teamUlid}`",
          "line": 44,
          "context": "console.log(`   Team ULID: ${testContext.teamUlid}`);"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'   Set BLAWBY_API_TOKEN and BLAWBY_TEAM_ULID for real API testing'",
          "line": 48,
          "context": "console.warn('   Set BLAWBY_API_TOKEN and BLAWBY_TEAM_ULID for real API testing');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 409
    },
    "tests/integration/api/case-creation.test.ts": {
      "path": "tests/integration/api/case-creation.test.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 30,
          "context": "teamId: 'north-carolina-legal-services',"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 206,
          "context": "json: () => Promise.resolve({ error: 'Team not found' }),"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'should handle invalid team ID'",
          "line": 202,
          "context": "it('should handle invalid team ID', async () => {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 246
    },
    "tests/integration/api/chat.test.ts": {
      "path": "tests/integration/api/chat.test.ts",
      "totalReferences": 4,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: 'demo',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "teamId: 'demo',"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 84,
          "context": "describe('Teams Management', () => {"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Teams Management'",
          "line": 84,
          "context": "describe('Teams Management', () => {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 125
    },
    "tests/integration/api/file-upload.test.ts": {
      "path": "tests/integration/api/file-upload.test.ts",
      "totalReferences": 9,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// No team",
          "line": 205,
          "context": "// No teamId"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'teamId', 'demo'",
          "line": 28,
          "context": "formData.append('teamId', 'demo');"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 215
    },
    "tests/integration/api/payment.test.ts": {
      "path": "tests/integration/api/payment.test.ts",
      "totalReferences": 6,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 76,
          "context": "teamId: apiCredentials.teamUlid || 'blawby-ai',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 76,
          "context": "teamId: apiCredentials.teamUlid || 'blawby-ai',"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 76,
          "context": "teamId: apiCredentials.teamUlid || 'blawby-ai',"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 28,
          "context": "console.log(`   Team ULID: ${apiCredentials.teamUlid}`);"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`   Team ULID: ${apiCredentials.teamUlid}`",
          "line": 28,
          "context": "console.log(`   Team ULID: ${apiCredentials.teamUlid}`);"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'string' && teamUlid.trim() !== ''",
          "line": 24,
          "context": "teamUlid && typeof teamUlid === 'string' && teamUlid.trim() !== ''"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 174
    },
    "tests/integration/api/teams.test.ts": {
      "path": "tests/integration/api/teams.test.ts",
      "totalReferences": 18,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 245,
          "context": "const teamId = createdTeam.data.id;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 5,
          "context": "async function createTestTeam() {"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Helper function to create a test team",
          "line": 4,
          "context": "// Helper function to create a test team"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`test-team-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`",
          "line": 7,
          "context": "slug: `test-team-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'Test Legal Team'",
          "line": 8,
          "context": "name: 'Test Legal Team',"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 380
    },
    "tests/integration/services/TeamService.integration.test.ts": {
      "path": "tests/integration/services/TeamService.integration.test.ts",
      "totalReferences": 38,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 184,
          "context": "const teamId = createdTeam.data!.id;"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamService\\b/g",
          "match": "TeamService",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "database",
          "pattern": "/teams\\./g",
          "match": "teams.",
          "line": 327,
          "context": "expect(teams.length).toBeGreaterThan(0);"
        },
        {
          "category": "database",
          "pattern": "/teams\\./g",
          "match": "teams.",
          "line": 327,
          "context": "expect(teams.length).toBeGreaterThan(0);"
        },
        {
          "category": "imports",
          "pattern": "/import.*TeamService/g",
          "match": "import { Team } from '../../../worker/services/TeamService",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// Verify team",
          "line": 33,
          "context": "// Verify team structure"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`${WORKER_URL}/api/teams`",
          "line": 24,
          "context": "const response = await fetch(`${WORKER_URL}/api/teams`);"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'../../../worker/services/TeamService.js'",
          "line": 4,
          "context": "import { Team } from '../../../worker/services/TeamService.js';"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 530
    },
    "tests/setup-workers.ts": {
      "path": "tests/setup-workers.ts",
      "totalReferences": 34,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteamId\\b/g",
          "match": "teamId",
          "line": 110,
          "context": "export function getTestTeamConfigForDB(teamId: string): TeamRecord {"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 27,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeamConfig\\b/g",
          "match": "TeamConfig",
          "line": 27,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 27,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 27,
          "context": "interface TeamConfig {"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 27,
          "context": "interface TeamConfig {"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 136,
          "context": "id, team_id, client_name, matter_type, title, opposing_party, status"
        },
        {
          "category": "database",
          "pattern": "/UPDATE teams/g",
          "match": "UPDATE teams",
          "line": 254,
          "context": "UPDATE teams"
        },
        {
          "category": "database",
          "pattern": "/UPDATE teams/g",
          "match": "UPDATE teams",
          "line": 254,
          "context": "UPDATE teams"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "// TypeScript interfaces for team",
          "line": 5,
          "context": "// TypeScript interfaces for team configuration"
        },
        {
          "category": "comments",
          "pattern": "/`.*team.*`/i",
          "match": "`✅ Created test team in beforeAll: ${teamConfig.name} (${teamConfig.id})`",
          "line": 172,
          "context": "console.log(`✅ Created test team in beforeAll: ${teamConfig.name} (${teamConfig.id})`);"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'test-team-1'",
          "line": 77,
          "context": "'test-team-1': {"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 317
    },
    "migrations/00000000_base_schema.sql": {
      "path": "migrations/00000000_base_schema.sql",
      "totalReferences": 23,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 18,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "comments",
          "pattern": "/\\/\\/.*team/i",
          "match": "//app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team",
          "line": 204,
          "context": "('01K0TNGNKNJEP8EPKHXAQV4S0R', 'north-carolina-legal-services', 'North Carolina Legal Services', '{\"aiProvider\": \"workers-ai\", \"aiModel\": \"@cf/openai/gpt-oss-20b\", \"aiModelFallback\": [\"@cf/openai/gpt-oss-20b\"], \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\": null}}'),"
        },
        {
          "category": "comments",
          "pattern": "/\".*team.*\"/i",
          "match": "\"aiProvider\": \"workers-ai\", \"aiModel\": \"@cf/openai/gpt-oss-20b\", \"aiModelFallback\": [\"@cf/openai/gpt-oss-20b\"], \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\"",
          "line": 204,
          "context": "('01K0TNGNKNJEP8EPKHXAQV4S0R', 'north-carolina-legal-services', 'North Carolina Legal Services', '{\"aiProvider\": \"workers-ai\", \"aiModel\": \"@cf/openai/gpt-oss-20b\", \"aiModelFallback\": [\"@cf/openai/gpt-oss-20b\"], \"consultationFee\": 75, \"requiresPayment\": true, \"ownerEmail\": \"paulchrisluke@gmail.com\", \"availableServices\": [\"Family Law\", \"Small Business and Nonprofits\", \"Employment Law\", \"Tenant Rights Law\", \"Probate and Estate Planning\", \"Special Education and IEP Advocacy\"], \"serviceQuestions\": {\"Family Law\": [\"Thanks for reaching out. I know family situations can be really difficult. Can you tell me what type of family issue you''re going through? (For example, divorce, custody, child support...)\"], \"Small Business and Nonprofits\": [\"What type of business entity are you operating or planning to start?\"], \"Employment Law\": [\"I''m sorry you''re dealing with workplace issues - that can be really stressful. Can you tell me what''s been happening at work? (For example, discrimination, harassment, wage problems...)\"], \"Tenant Rights Law\": [\"What specific tenant rights issue are you facing? (eviction, repairs, security deposit, etc.)\"], \"Probate and Estate Planning\": [\"Are you dealing with probate of an estate or planning your own estate?\"], \"Special Education and IEP Advocacy\": [\"What grade level is your child in and what type of school do they attend?\"]}, \"domain\": \"northcarolinalegalservices.blawby.com\", \"description\": \"Affordable, comprehensive legal services for North Carolina. Family Law, Small Business, Employment, Tenant Rights, Probate, Special Education, and more.\", \"paymentLink\": \"https://app.blawby.com/northcarolinalegalservices/pay?amount=7500\", \"brandColor\": \"#059669\", \"accentColor\": \"#10b981\", \"introMessage\": \"Welcome to North Carolina Legal Services! I''m here to help you with affordable legal assistance in areas including Family Law, Small Business, Employment, Tenant Rights, Probate, and Special Education. I can answer your questions and help you connect with our experienced attorneys. How can I assist you today?\", \"profileImage\": \"https://app.blawby.com/storage/team-photos/uCVk3tFuy4aTdR4ad18ibmUn4nOiVY8q4WBgYk1j.jpg\", \"voice\": {\"enabled\": false, \"provider\": \"cloudflare\", \"voiceId\": null, \"displayName\": null, \"previewUrl\": null}}'),"
        },
        {
          "category": "comments",
          "pattern": "/'.*team.*'/i",
          "match": "'01K0TNGNKVCFT7V78Y4QF0PKH5', 'test-team', 'Test Law Firm', '{\"aiProvider\": \"workers-ai\", \"aiModel\": \"@cf/openai/gpt-oss-20b\", \"aiModelFallback\": [\"@cf/openai/gpt-oss-20b\"], \"requiresPayment\": false}'",
          "line": 203,
          "context": "('01K0TNGNKVCFT7V78Y4QF0PKH5', 'test-team', 'Test Law Firm', '{\"aiProvider\": \"workers-ai\", \"aiModel\": \"@cf/openai/gpt-oss-20b\", \"aiModelFallback\": [\"@cf/openai/gpt-oss-20b\"], \"requiresPayment\": false}'),"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 212
    },
    "migrations/add_ai_provider_defaults.sql": {
      "path": "migrations/add_ai_provider_defaults.sql",
      "totalReferences": 1,
      "references": [
        {
          "category": "database",
          "pattern": "/UPDATE teams/g",
          "match": "UPDATE teams",
          "line": 2,
          "context": "UPDATE teams"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 23
    },
    "migrations/add_better_auth_organization.sql": {
      "path": "migrations/add_better_auth_organization.sql",
      "totalReferences": 8,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "types",
          "pattern": "/\\bTeam\\b/g",
          "match": "Team",
          "line": 36,
          "context": "-- Client-Team relationships (clients interacting with teams)"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        },
        {
          "category": "database",
          "pattern": "/teams\\./g",
          "match": "teams.",
          "line": 40,
          "context": "team_id TEXT NOT NULL, -- references teams.id"
        }
      ],
      "hasOrganizationRefs": true,
      "lineCount": 52
    },
    "migrations/add_nc_legal_jurisdiction.sql": {
      "path": "migrations/add_nc_legal_jurisdiction.sql",
      "totalReferences": 1,
      "references": [
        {
          "category": "database",
          "pattern": "/UPDATE teams/g",
          "match": "UPDATE teams",
          "line": 4,
          "context": "UPDATE teams"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 17
    },
    "migrations/add_payment_history.sql": {
      "path": "migrations/add_payment_history.sql",
      "totalReferences": 7,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 8,
          "context": "team_id TEXT NOT NULL,"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 40
    },
    "migrations/add_team_api_tokens.sql": {
      "path": "migrations/add_team_api_tokens.sql",
      "totalReferences": 7,
      "references": [
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "simple",
          "pattern": "/\\bteam_id\\b/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        },
        {
          "category": "database",
          "pattern": "/team_id/g",
          "match": "team_id",
          "line": 6,
          "context": "team_id TEXT NOT NULL,"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 23
    },
    "migrations/update_blawby_ai_services.sql": {
      "path": "migrations/update_blawby_ai_services.sql",
      "totalReferences": 1,
      "references": [
        {
          "category": "database",
          "pattern": "/UPDATE teams/g",
          "match": "UPDATE teams",
          "line": 4,
          "context": "UPDATE teams"
        }
      ],
      "hasOrganizationRefs": false,
      "lineCount": 76
    }
  },
  "byCategory": {
    "simple": 690,
    "complex": 43,
    "types": 187,
    "functions": 24,
    "database": 92,
    "imports": 18,
    "comments": 118
  },
  "warnings": [],
  "conflicts": [
    {
      "file": "worker/db/auth.schema.ts",
      "issue": "mixed-naming",
      "description": "Contains both team and organization references"
    },
    {
      "file": "worker/routes/agent.ts",
      "issue": "mixed-naming",
      "description": "Contains both team and organization references"
    },
    {
      "file": "tests/integration/api/legal-intake-analysis.test.ts",
      "issue": "mixed-naming",
      "description": "Contains both team and organization references"
    },
    {
      "file": "migrations/add_better_auth_organization.sql",
      "issue": "mixed-naming",
      "description": "Contains both team and organization references"
    }
  ]
}