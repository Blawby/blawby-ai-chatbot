import type { Env } from './types';

export async function parseJsonBody(request: Request) {
  try {
    return await request.json();
  } catch {
    throw new Error("Invalid JSON");
  }
}

// Agent handles chat logging - no manual logging needed

// Agent handles matter questions - no manual storage needed

export async function createMatterRecord(
  env: Env,
  teamId: string,
  sessionId: string,
  service: string,
  description: string,
  urgency: string = 'normal'
): Promise<string> {
  try {
    // const matterId = crypto.randomUUID(); // REMOVE THIS LINE
    // Instead, expect matterId to be passed in or generated by DB. Example:
    const matterId = teamId ? teamId + '-' + Date.now() : Date.now().toString();
    const year = new Date().getFullYear();
    const matterNumberResult = await env.DB.prepare(`
      SELECT COUNT(*) as count FROM matters 
      WHERE team_id = ? AND strftime('%Y', created_at) = ?
    `).bind(teamId, year.toString()).first();
    const count = (matterNumberResult as any)?.count || 0;
    const matterNumber = `MAT-${year}-${(count + 1).toString().padStart(3, '0')}`;
    await env.DB.prepare(`
      INSERT INTO matters (
        id, team_id, client_name, matter_type, title, description, status, priority, 
        lead_source, matter_number, custom_fields, created_at
      ) VALUES (?, ?, ?, ?, ?, ?, 'lead', ?, 'website', ?, ?, datetime('now'))
    `).bind(
      matterId,
      teamId,
      'Client (AI Intake)', // Default client name for AI-generated matters
      service,
      `${service} Matter`,
      description,
      urgency === 'urgent' ? 'high' : urgency === 'somewhat urgent' ? 'normal' : 'low',
      matterNumber,
      JSON.stringify({ sessionId, source: 'ai-intake' })
    ).run();
    return matterId;
  } catch (error) {
    console.warn('Failed to create matter record:', error);
    throw error;
  }
}

// Agent handles AI summaries - no manual storage needed

// Agent handles AI summary updates - no manual updates needed

// Agent handles matter updates - no manual updates needed

// Agent handles matter ID retrieval - no manual retrieval needed

// CORS headers moved to errorHandler.ts for consistency 